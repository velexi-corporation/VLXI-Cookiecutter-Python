name: CI

on:
  push:
    branches:
      - main
    tags: '*'

  pull_request:
    branches:
      - main

concurrency:
  # Skip intermediate builds: always.
  # Cancel intermediate builds: only if it is a pull request build.
  group: {% raw %}${{ github.workflow }}-${{ github.ref }}{% endraw %}
  cancel-in-progress: {% raw %}${{ startsWith(github.ref, 'refs/pull/') }}{% endraw %}

jobs:
  docs:
    name: Documentation

    runs-on: ubuntu-latest

    steps:
      # --- Check out code and setup Python

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      # --- Install Poetry

      - name: Load cached $HOME/.local
        uses: actions/cache@v2.1.6
        with:
          path: ~/.local
          key: {% raw %}dotlocal-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}-${{ hashFiles('.github/workflows/CI.yml') }}{% endraw %}

      - name: Install Python poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
          installer-parallel: true

      # --- Install package dependencies

      - name: Load cached venv
        id: cached-poetry-dependencies
        uses: actions/cache@v2
        with:
          path: .venv
          key: {% raw %}venv-docs-${{ runner.os }}-${{ runner.arch }}-${{ matrix.python-version }}-${{ hashFiles('**/poetry.lock') }}{% endraw %}

      - name: Install package dependencies
        if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
        run: poetry install

      # --- Build and deploy documentation

      # TODO: port this step from to Python from Julia
      - name: Build and deploy documentation
        run: julia --project=docs/ --compile=min -O0 docs/make.jl
        env:
          GITHUB_TOKEN: {% raw %}${{ secrets.GITHUB_TOKEN }}{% endraw %}
          DOCUMENTER_KEY: {% raw %}${{ secrets.DOCUMENTER_KEY }}{% endraw %}
